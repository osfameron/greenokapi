* {
    box-sizing: border-box;
}

/* Use the new scroll-snap stuff, which means we can move
 * seamlessly to the next slide, if supported*/
:root {
    scroll-behavior: smooth;
    scroll-snap-type: y mandatory;
}

section {
    scroll-snap-align: start;
    display: grid;
    grid-template-columns: minmax(130vh, 181vh)
                           minmax(20em, 1fr);
    height: 100vh;
}
section > img {
    grid-column: 1;
    height: 100vh;
    width: 100%;
    object-fit: cover;
}
section > div {
    font-family: sans-serif;
    background: rgb(240,220,170);
    grid-column: 2;
    padding: 0.5em calc(1px + 1vw);
    border-bottom: solid 1px rgb(83,78,79);
}

/* if not wide enough for the notes as a sidebar, we'll
 * use sticky positioning and a translucent overlay instead.
 * This is technically scrolljacking isn't it? Oh well. */
@media (min-width: 140vh) and (max-width: 160vh) {
    section {
        display: block;
        position: relative;
        height: 200vh;
        scroll-snap-align: none;
    }
    section > img, section > div {
        /* we want to snap first to the slide, and then to
         * the description. Note that we seem to have to
         * remove this from the parent to make this work. */
        scroll-snap-align: start;
    }
    section > img {
        position: sticky;
        top: 0;
        z-index: -1;
        height: auto;
        height: 100vh;
        object-fit: cover;
    }
    section > div {
        z-index: 999;
        font-weight: bold;
        background: rgba(240,220,170, 75%);
        padding: calc(1px + 1vh) 0.5em;
        height: 100vh;
    }
}

/* This is a little like @media (orientation: portrait)
 * but we want it to kick in earlier. We move the notes
 * to the bottom instead. */
@media (max-width: 140vh) {
    section {
        grid-template-columns: 1fr;
        grid-template-rows: minmax(40vw, 55vw) 1fr;
    }
    section > img {
        grid-column: 1;
        grid-row: 1;
        height: auto;
        width: 100vw;
        object-fit: cover;
    }
    section > div {
        grid-column: 1;
        grid-row: 2;
        padding: calc(1px + 1vh) 0.5em;
    }
}
